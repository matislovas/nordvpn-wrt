#!/bin/sh /etc/rc.common

USE_PROCD=1
START=80


service_triggers() {
	procd_add_reload_trigger "nordvpn"
	procd_add_interface_trigger "interface.*.up" wan /etc/init.d/nordvpn reload
}

section_enabled() {
	config_get_bool enabled "$1" 'enabled' 0
	[ $enabled -gt 0 ]
}

start_service() {
  local std_err std_out

  config_load nordvpn

  if ! section_enabled "settings"; then
		echo "Disabled in config"
		return 1
	fi

  config_get_bool std_out "settings" log_stdout 1
  config_get_bool std_err "settings" log_stderr 1

  procd_open_instance
  procd_set_param stdout "$std_out"
  procd_set_param stderr "$std_err"uci 
  procd_set_param command /usr/sbin/nordvpnd
  procd_set_param respawn
  procd_close_instance
}

service_started() {
  local _token _lan_subnet _country
  local _meshnet _connect_on_startup _ipv6 _vpn _protocol _technology

  config_load nordvpn

  if ! section_enabled "settings"; then
		echo "Disabled in config"
		return 1
	fi

  config_get_bool _meshnet "settings" meshnet 1
  config_get_bool _vpn "settings" vpn 1
  config_get_bool _ipv6 "settings" ipv6 1
  # config_get _lan_subnet "settings" lan_subnet
  config_get _token "settings" token
  config_get _country "settings" country
  config_get _protocol "settings" protocol
  config_get _technology "settings" technology

  # Wait 10 secs for dameon to start up
  TIMEOUT=0;

  while [ -z "`/bin/pidof /usr/sbin/nordvpnd`" ]; do
    if [ $TIMEOUT -ge 10 ]; then
      /bin/echo " daemon not started, cleaning up ..."
      /usr/bin/killall -9 nordvpnd 2> /dev/null > /dev/null
      return
    fi

    TIMEOUT=`expr $TIMEOUT + 1`

    /bin/echo -n "."

    /bin/sleep 1
  done

  /usr/bin/nordvpn set defaults > /dev/null
  /usr/bin/nordvpn set firewall off > /dev/null
  /usr/bin/nordvpn set routing off > /dev/null
  /usr/bin/nordvpn set notify off > /dev/null
  /usr/bin/nordvpn set tray off > /dev/null
  /usr/bin/nordvpn set lan-discovery off > /dev/null
  /usr/bin/nordvpn set tpl off > /dev/null
  /usr/bin/nordvpn set autoconnect off > /dev/null

  if [ -n "$_technology" ]; then
    /usr/bin/nordvpn set technology "$_technology" > /dev/null
  fi
  if [ -n "$_protocol" ]; then
    /usr/bin/nordvpn set protocol "$_protocol" > /dev/null
  fi
  if [ -n "$_token" ]; then
    /usr/bin/nordvpn login --token "$_token"
  fi
  if [ "$_meshnet" -eq 1 ]; then
    /usr/bin/nordvpn set mesh on > /dev/null
  else
    /usr/bin/nordvpn set mesh off > /dev/null
  fi
  if [ "$_ipv6" -eq 1 ]; then
    /usr/bin/nordvpn set ipv6 off > /dev/null
  else
    /usr/bin/nordvpn set ipv6 on > /dev/null
  fi
  if [ "$_vpn" -eq 1 ]; then
    if [ -n "$_country" ]; then
      /usr/bin/nordvpn connect "$_country"
    else
      /usr/bin/nordvpn connect
    fi
  else
    /usr/bin/nordvpn disconnect > /dev/null
  fi

  if [ "$_vpn" -eq 1 ]; then
    # Add network settings
    uci -q delete network.nordvpn

    local nordif_name="nordlynx"

    if [ "$_technology" = "OPENVPN" ]; then
      nordif_name="nordtun"
    fi

    nordif_ip=$(ifconfig $nordif_name | grep "inet addr" | awk '{print $2}' | cut -d: -f2)
    nordif_mask=$(ifconfig $nordif_name | grep "Mask" | awk '{print $4}' | cut -d: -f2)

    uci set network.nordvpn='interface'
    uci set network.nordvpn.ifname=$nordif_name
    uci set network.nordvpn.proto='static'
    uci set network.nordvpn.metric=1
    uci set network.nordvpn.ipaddr=$nordif_ip
    uci set network.nordvpn.netmask=$nordif_mask
    uci commit network

    # Add firewall settings
    uci -q delete firewall.nordzone
    uci set firewall.nordzone=zone
    uci set firewall.nordzone.name='nordvpn'
    uci set firewall.nordzone.input='ACCEPT'
    uci set firewall.nordzone.output='ACCEPT'
    uci set firewall.nordzone.forward='ACCEPT'
    uci set firewall.nordzone.network='nordvpn'
    uci commit firewall

    # TODO not sure abouf this
    uci -q delete firewall.nordfwlan
    uci set firewall.nordfwlan=forwarding
    uci set firewall.nordfwlan.src='lan'
    uci set firewall.nordfwlan.dest='nordvpn'
    uci commit firewall


    uci -q delete firewall.lanfwnord
    uci set firewall.lanfwnord=forwarding
    uci set firewall.lanfwnord.src='nordvpn'
    uci set firewall.lanfwnord.dest='lan'
    uci commit firewall

    # TODO add separate config for  meshent

    /etc/init.d/network reload
    /etc/init.d/firewall reload
  fi
}

stop_service() {
  /usr/bin/nordvpn disconnect > /dev/null
  /usr/bin/nordvpn logout --persist-token > /dev/null

  # Remove network settings
	uci -q delete network.nordvpn
	
	# Remove firewall settings
	uci -q delete firewall.nordzone
	uci -q delete firewall.nordfwlan
	uci -q delete firewall.lanfwnord
	[ -n "$(uci changes network)" ] && uci commit network && /etc/init.d/network reload
	[ -n "$(uci changes firewall)" ] && uci commit firewall && /etc/init.d/firewall reload
}
